{
    "pipes": [
        {
            "name": "SortPipe",
            "id": "pipe-SortPipe-206324964856ba9778864422d64a65b23533c3dd0eb2e917b8b9bfacbff0d7eb44aa8c2b4869ae898223e8c9f6a03ae627f0f01739863f8b2e594533c6dd1c66",
            "file": "src/app/sort.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "Product[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Product[]",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Product[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "sort",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { Product } from './products/product';\n\n\n@Pipe({\n  name: 'sort',\n})\nexport class SortPipe implements PipeTransform {\n  transform(value: Product[]): Product[] {\n    if (value) {\n      return value.sort((a: Product, b: Product) => {\n        if (a.name < b.name) {\n          return -1;\n        } else if (b.name < a.name) {\n          return 1;\n        }\n        return 0;\n      });\n    }\n\n    return [];\n  }\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "AppConfig",
            "id": "interface-AppConfig-c0acfb969a94e4901e195a55ceaefe81b284c47f6118e71bd7306f296fd1f2a9c5c565c040294d783a0cea2b48bd7575ebfaf318a0fa7dfd4967b5e87c2fee18",
            "file": "src/app/app.config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\n\nexport interface AppConfig {\n  title: string;\n  version: number;\n}\n\nexport const appSettings: AppConfig = {\n  title: 'My application',\n  version: 1.0,\n};\n\nexport const APP_CONFIG = new InjectionToken<AppConfig>('app.config');\n",
            "properties": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "version",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Product",
            "id": "interface-Product-c99246592b9debbf539874c09e25fa95e79904ac94cbaad5974919108cfb00b6a942f33819ca447a1f05b918abbe802a3b12c41d45bf71aeaf434036c569e89d",
            "file": "src/app/products/product.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Product {\n  id: number;\n  name: string;\n  price: number;\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ProductDTO",
            "id": "interface-ProductDTO-3624c9a0acb9bd92aadac6815cb186f6c43dbf393391fff034ffa84617726f467bf2a3aa3c004a81cbfde478e047d767bb1d80a64418e1efaa266f38406bad4f",
            "file": "src/app/products/products.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable, of } from 'rxjs';\nimport { Product } from './product';\n\ninterface ProductDTO {\n  id: number;\n  title: string;\n  price: number;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductsService {\n  private productsUrl = 'http://localhost:3000/products';\n\n  private convertToProduct(product: ProductDTO): Product {\n    return {\n      id: product.id,\n      name: product.title,\n      price: product.price,\n    };\n  }\n\n  getProduct(id: number): Observable<Product> {\n    return this.http\n      .get<ProductDTO>(`${this.productsUrl}/${id}`)\n      .pipe(map((product) => this.convertToProduct(product)));\n  }\n\n  getProducts(): Observable<Product[]> {\n    return this.http.get<ProductDTO[]>(this.productsUrl).pipe(\n      map((products) =>\n        products.map((product) => {\n          return this.convertToProduct(product);\n        })\n      )\n    );\n  }\n\n  addProduct(name: string, price: number | undefined): Observable<Product> {\n    console.log(`this price: ${price}`)\n    return this.http\n      .post<ProductDTO>(this.productsUrl, {\n        title: name,\n        price: price,\n      })\n      .pipe(map((product) => this.convertToProduct(product)));\n  }\n\n  updateProduct(id: number, price: number): Observable<void> {\n    return this.http.patch<void>(`${this.productsUrl}/${id}`, { price });\n  }\n\n  constructor(private http: HttpClient) {}\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-65fcb29f670f9448800bcb7e6f91475d07f1936e8e77572522f79861fafd5c6731ee4b2ce31f684478c86a3c1589f11b31970ccbf16215c9f44dbb8d4f829375",
            "file": "src/app/auth/auth.service.ts",
            "properties": [
                {
                    "name": "token",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRemove the stored token to log the user out.\n",
                    "description": "<p>Remove the stored token to log the user out.</p>\n"
                },
                {
                    "name": "register",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMake an API request to authenticate the user and store the received token.\n",
                    "description": "<p>Make an API request to authenticate the user and store the received token.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 530,
                                "end": 537,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>The observable of the authentication token.</p>\n",
                            "returnType": ""
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, tap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private token = '';\n\n  /**\n   * Check if the user is logged in based on the presence of a token.\n   * @returns {boolean} True if the user is logged in, otherwise false.\n   */\n  get isLoggedIn(): boolean { return this.token !== ''; }\n\n  /**\n   * Make an API request to authenticate the user and store the received token.\n   * @returns {Observable<string>} The observable of the authentication token.\n   */\n  register(): Observable<string> {\n    return this.http.post<string>('http://localhost:3000/register', {\n      \"email\": \"email@email.com\",\n      \"password\": \"password\"\n    })\n    .pipe(tap((token) => (this.token = token)));\n  }\n\n  login(): Observable<string> {\n    return this.http\n      .post<string>('http://localhost:3000/login', {\n        email: 'email@email.com',\n        password: 'password',\n      })\n      .pipe(tap((token) => (this.token = token)));\n  }\n\n  /**\n   * Remove the stored token to log the user out.\n   */\n  logout() {\n    this.token = '';\n  }\n\n\n  constructor(private http: HttpClient) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 43,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "isLoggedIn": {
                    "name": "isLoggedIn",
                    "getSignature": {
                        "name": "isLoggedIn",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 15,
                        "rawdescription": "\n\nCheck if the user is logged in based on the presence of a token.\n",
                        "description": "<p>Check if the user is logged in based on the presence of a token.</p>\n",
                        "jsdoctags": [
                            {
                                "pos": 306,
                                "end": 376,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 339,
                                "tagName": {
                                    "pos": 307,
                                    "end": 314,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>True if the user is logged in, otherwise false.</p>\n",
                                "typeExpression": {
                                    "pos": 315,
                                    "end": 324,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 307,
                                    "type": {
                                        "pos": 316,
                                        "end": 323,
                                        "flags": 4194304,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 1,
                                        "kind": 133
                                    }
                                }
                            }
                        ]
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "CartService",
            "id": "injectable-CartService-812333c3450c24fb3c9b7bf00c29aeea24ecd3748958b02f73960bb3e8958a5931d3133c96d167fc54b95e2ad5567dd7f0bed416f52469aac7078c72f470d9ab",
            "file": "src/app/cart/cart.service.ts",
            "properties": [
                {
                    "name": "cart",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [
                {
                    "name": "addProduct",
                    "args": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\nimport { Product } from '../products/product';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartService {\n  cart: Product[] = [];\n\n  constructor() {}\n\n  addProduct(product: Product) {\n    console.log(`product ${product.name} added to cart`)\n    this.cart.push(product);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "type": "injectable"
        },
        {
            "name": "ProductsService",
            "id": "injectable-ProductsService-3624c9a0acb9bd92aadac6815cb186f6c43dbf393391fff034ffa84617726f467bf2a3aa3c004a81cbfde478e047d767bb1d80a64418e1efaa266f38406bad4f",
            "file": "src/app/products/products.service.ts",
            "properties": [
                {
                    "name": "productsUrl",
                    "defaultValue": "'http://localhost:3000/products'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addProduct",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "price",
                            "type": "number | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Product>",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "price",
                            "type": "number | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "convertToProduct",
                    "args": [
                        {
                            "name": "product",
                            "type": "ProductDTO",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Product",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "ProductDTO",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getProduct",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Product>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getProducts",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Product[]>",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateProduct",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "price",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "price",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable, of } from 'rxjs';\nimport { Product } from './product';\n\ninterface ProductDTO {\n  id: number;\n  title: string;\n  price: number;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductsService {\n  private productsUrl = 'http://localhost:3000/products';\n\n  private convertToProduct(product: ProductDTO): Product {\n    return {\n      id: product.id,\n      name: product.title,\n      price: product.price,\n    };\n  }\n\n  getProduct(id: number): Observable<Product> {\n    return this.http\n      .get<ProductDTO>(`${this.productsUrl}/${id}`)\n      .pipe(map((product) => this.convertToProduct(product)));\n  }\n\n  getProducts(): Observable<Product[]> {\n    return this.http.get<ProductDTO[]>(this.productsUrl).pipe(\n      map((products) =>\n        products.map((product) => {\n          return this.convertToProduct(product);\n        })\n      )\n    );\n  }\n\n  addProduct(name: string, price: number | undefined): Observable<Product> {\n    console.log(`this price: ${price}`)\n    return this.http\n      .post<ProductDTO>(this.productsUrl, {\n        title: name,\n        price: price,\n      })\n      .pipe(map((product) => this.convertToProduct(product)));\n  }\n\n  updateProduct(id: number, price: number): Observable<void> {\n    return this.http.patch<void>(`${this.productsUrl}/${id}`, { price });\n  }\n\n  constructor(private http: HttpClient) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 54,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ProductViewService",
            "id": "injectable-ProductViewService-c3e1ed40758c7f091862d53b69b607238d4e95a97f6a6b811b9713ade291afd6c7f13b7f67129ea27ac539862536b8c3a18cb18a4dae0e90641843910f949e0b",
            "file": "src/app/products/product-view/product-view.service.ts",
            "properties": [
                {
                    "name": "product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product | undefined",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getProduct",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Product>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { ProductsService } from '../products.service';\nimport { Product } from '../product';\nimport { Observable, of, switchMap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductViewService {\n  private product: Product | undefined;\n\n  constructor(private productService: ProductsService) {}\n\n  getProduct(id: number): Observable<Product> {\n    return this.productService.getProducts().pipe(\n      switchMap((products) => {\n        if (!this.product) {\n          this.product = products[id];\n        }\n        return of(this.product);\n      })\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [
        {
            "name": "AuthInterceptor",
            "id": "injectable-AuthInterceptor-7a9791785b8855fc1d91b0f4f2cac5948b78cab40d9aa89ae993312066135a785dc16dc5fa438f945ffcf4b4f7ef00cec37390c98a871f0e7191a1ed2f70d53e",
            "file": "src/app/auth/auth.interceptor.ts",
            "properties": [],
            "methods": [
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "request",
                            "type": "HttpRequest<>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<>>",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "HttpRequest<>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const authReq = request.clone({\n      setHeaders: { Authorization: 'myAuthToken'}\n    })\n    return next.handle(authReq);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "type": "interceptor"
        }
    ],
    "classes": [],
    "directives": [
        {
            "name": "CopyrightDirective",
            "id": "directive-CopyrightDirective-1fe879f460985faee082b813c52793b59ef6ff40aa4a6652ca811f84796d5bdf96f774e893ee21f8e7b805a5696944b2dfb9e7918b35b7c3967aaea0118c675f",
            "file": "src/app/copyright.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appCopyright]',\n})\nexport class CopyrightDirective {\n  constructor(el: ElementRef) {\n    const currentYear = new Date().getFullYear();\n    const targetEl: HTMLElement = el.nativeElement;\n    targetEl.classList.add('copyright');\n    targetEl.textContent = 'Copyright ©${currentYear} All Rights Reserved.';\n  }\n}\n",
            "selector": "[appCopyright]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "NumericDirective",
            "id": "directive-NumericDirective-eadf7ff363e63443b454eb281077cb174afe468ade863aa65758497b234248d230269d8e249219ab596809f76de27877382c1cc7799700e0e351433da9169a6e",
            "file": "src/app/numeric.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appNumeric]',\n})\nexport class NumericDirective {\n\n  @HostBinding('class')\n  currentClass = '';\n\n  @HostListener('keypress', ['$event'])\n  onKeyPress(event: KeyboardEvent) {\n    const charCode = event.key.charCodeAt(0);\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n      this.currentClass = 'invalid';\n      event.preventDefault();\n    } else {\n      this.currentClass = 'valid';\n    }\n  }\n\n  constructor() {}\n}\n",
            "selector": "[appNumeric]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [
                {
                    "name": "keypress",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12
                }
            ],
            "propertiesClass": [
                {
                    "name": "currentClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onKeyPress",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'keypress', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            }
        },
        {
            "name": "PermissionDirective",
            "id": "directive-PermissionDirective-5c893eb039e4b934f40cc8aaa6c76471832b6d99e3e49d4be73575ac4828edcc087db9c37977b96bc9c5b195f0b97786d22a4959fa62817a1facb1ea13b2ee8a",
            "file": "src/app/permission.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  Directive,\n  Input,\n  TemplateRef,\n  ViewContainerRef,\n  OnInit,\n} from '@angular/core';\n\n@Directive({\n  selector: '[appPermission]',\n  standalone: true,\n})\nexport class PermissionDirective implements OnInit {\n  @Input()\n  appPermission: string[] = [];\n\n  private currentRole: string = 'agent';\n\n  constructor(\n    private tmplRef: TemplateRef<any>,\n    private vc: ViewContainerRef\n  ) {}\n\n\n  ngOnInit(): void {\n    console.log(this.appPermission)\n    console.log(this.currentRole)\n    if (this.appPermission.indexOf(this.currentRole) === -1) {\n      this.vc.clear();\n    } else {\n      this.vc.createEmbeddedView(this.tmplRef);\n    }\n  }\n}\n",
            "selector": "[appPermission]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "appPermission",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "currentRole",
                    "defaultValue": "'agent'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "OnInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "tmplRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "vc",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "tmplRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "vc",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ProductHostDirective",
            "id": "directive-ProductHostDirective-9c32ef6a1bae93e4b4de3e922e66b4ab57f4ac7a2a0128c7a5d3d586c387cd9ed2b562f6db7818224c1183d1dd75fdc24a59c4e3af6ffced8e028e5334717744",
            "file": "src/app/products/product-host.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, OnInit, ViewContainerRef } from '@angular/core';\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\n\n@Directive({\n  selector: '[appProductHost]',\n})\nexport class ProductHostDirective implements OnInit {\n\n  constructor(private vc: ViewContainerRef) {}\n\n  ngOnInit(): void {\n    const productRef = this.vc.createComponent(ProductDetailComponent);\n    productRef.setInput('product', {\n      name: 'Optical mouse',\n      price: 130,\n    });\n  }\n}\n",
            "selector": "[appProductHost]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "OnInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "vc",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "vc",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AboutInfoComponent",
            "id": "component-AboutInfoComponent-bb0e5ddd9cfc77b18991487c536875997f2d2bcafad09a2313a22c708d02dc6f8730f05819f6885de5d51e81676660fb5a6aee8ff337963c56fa4e2bbcae09fa",
            "file": "src/app/about/about-info/about-info.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-about-info",
            "styleUrls": [
                "./about-info.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./about-info.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-about-info',\n  templateUrl: './about-info.component.html',\n  styleUrls: ['./about-info.component.css'],\n  standalone: true\n})\nexport class AboutInfoComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./about-info.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<p>about-info works!</p>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-43df851a9462acf11e2038b67529dd13ed87c7b5e42f29966ae9fd49961131cf02c54e3cda7700a4537d529976797b231ac5ec1e4c35639ebff3f5a27229e121",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{ provide: APP_CONFIG, useValue: appSettings }"
                }
            ],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "description",
                    "defaultValue": "'This is a description'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "setTitle",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "title",
                    "defaultValue": "'io_nlb_frontend_angular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onComplete",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, Inject } from '@angular/core';\nimport { APP_CONFIG, appSettings, AppConfig } from './app.config';\nimport { from } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [{ provide: APP_CONFIG, useValue: appSettings }],\n})\nexport class AppComponent implements OnDestroy {\n  title = 'io_nlb_frontend_angular';\n  description = 'This is a description';\n\n  private setTitle = () => {\n    const timestamp = new Date().toISOString();\n    this.title = `Learning Angular (${timestamp})`;\n  };\n\n  constructor(@Inject(APP_CONFIG) config: AppConfig) {\n    const complete$ = from(this.onComplete());\n    complete$.subscribe(this.setTitle);\n  }\n\n  private onComplete() {\n    return new Promise<void>((resolve) => {\n      setInterval(() => {\n        resolve();\n      }, 2000);\n    });\n  }\n\n  ngOnDestroy(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "config",
                        "type": "AppConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "config",
                        "type": "AppConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnDestroy"
            ],
            "templateData": "<mat-toolbar color=\"primary\">\n  <span>My e-shop</span>\n  <span class=\"flex-auto\"></span>\n  <a mat-flat-button color=\"primary\" routerLink=\"/products\">Products</a>\n  <span class=\"px-3\"></span>\n  <a mat-flat-button color=\"primary\" routerLink=\"/cart\">Cart</a>\n  <span class=\"px-3\"></span>\n  <a mat-flat-button color=\"primary\" routerLink=\"/about\">About Us</a>\n  <span class=\"px-3\"></span>\n  <span class=\"material-symbols-outlined\"> add_task </span>\n  <app-auth></app-auth>\n</mat-toolbar>\n\n<div class=\"flex flex-col\">\n  <router-outlet></router-outlet>\n</div>\n"
        },
        {
            "name": "AuthComponent",
            "id": "component-AuthComponent-23ea5f5e94a0fb22f7ca210513c9a3a573ee007cea5c5acca0f0f7ab03bc40631dfb426b9d819502f81ddd134d79f08ad5b5d61b88ee32f14d5030c54ffa7be0",
            "file": "src/app/auth/auth/auth.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-auth",
            "styleUrls": [
                "./auth.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./auth.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthService",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent {\n\n  constructor(public authService: AuthService) { }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./auth.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<button\n  mat-raised-button\n  [hidden]=\"authService.isLoggedIn\"\n  (click)=\"authService.login().subscribe()\"\n>\n  Login\n</button>\n<button\n  mat-raised-button\n  [hidden]=\"!authService.isLoggedIn\"\n  (click)=\"authService.logout()\"\n>\n  Logout\n</button>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-4ef205c97a334c309aa4001c8ab4a6d9571dcae18d0e85aaf0d367467ab5d3a9f13ab3573726f1fcb409bc9b49894dadfb80b1bbe1b6ba7041455ad9d4922004",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "CartComponent",
            "id": "component-CartComponent-917229542009177c3516ac60eb5cbedda9e534f2980cae0e8a14c33b7c0db0f352bbdb7f4481da547a2f33cb0796f4906ab85a2368bafef4bb9ad0d5e5cccd91",
            "file": "src/app/cart/cart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cart",
            "styleUrls": [
                "./cart.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./cart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cart",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "cartForm",
                    "defaultValue": "this.formBuilder.group({\n    products: this.formBuilder.array<number>([]),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "increaseQuantityByOne",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\nimport { Product } from '../products/product';\n\nimport { CartService } from './cart.service';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css'],\n})\nexport class CartComponent implements OnInit {\n  cartForm = this.formBuilder.group({\n    products: this.formBuilder.array<number>([]),\n  });\n\n  cart: Product[] = [];\n\n  get products() {\n    return this.cartForm.controls.products;\n  }\n\n  constructor(\n    private cartService: CartService,\n    private formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.cart = this.cartService.cart;\n    this.cart.forEach(() => {\n      this.cartForm.controls.products.push(\n        this.formBuilder.control<number>(1, Validators.required)\n      );\n    });\n  }\n\n  increaseQuantityByOne(index: number): void {\n    let temp_hold: number | null =  this.products.at(index).value;\n    if (temp_hold) {\n      this.cartForm.controls.products.at(index).patchValue(temp_hold + 1);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./cart.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "products": {
                    "name": "products",
                    "getSignature": {
                        "name": "products",
                        "type": "",
                        "returnType": "",
                        "line": 20
                    }
                }
            },
            "templateData": "<h2>My Cart</h2>\n\n<div [formGroup]=\"cartForm\">\n  <div\n    formArrayName=\"products\"\n    *ngFor=\"let product of cartForm.controls.products.controls; let i = index\"\n  >\n    <label>{{ cart[i].name }}</label>\n    <input type=\"number\" [formControlName]=\"i\" class=\"px-3\"/>\n    <button (click)=\"increaseQuantityByOne(i)\">Increase Quantity by One</button>\n  </div>\n</div>\n"
        },
        {
            "name": "ComponentComponent",
            "id": "component-ComponentComponent-0e6d5bbb10f98d5acd7249dc8150b24705b890b351db5053390ec9684147e39794000b4bddb7bbde31265cc529e982cee36ac7e4bbbfb0ed5713b6e85c08c550",
            "file": "src/app/Components/component/component.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-component",
            "styleUrls": [
                "./component.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./component.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-component',\n  templateUrl: './component.component.html',\n  styleUrls: ['./component.component.css']\n})\nexport class ComponentComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./component.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<p>component works!</p>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-a557eec14f72c438a8033301f4d6ce023e0a1844a3b06ec2b38794a612acc31735ae78a5ee10071b230c8c20d699eb914554e69d07ade54adb371da8efb464cc",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "KeyLoggerComponent",
            "id": "component-KeyLoggerComponent-c53e9c4fc1d48aa4cdd22c9361b98695c60c4f402787642197e99c6619de062696b68f883e39598b85a7b8fe1cec4c4a9ed4d7d3e37915bb5240fc4f866d5f7a",
            "file": "src/app/key-logger/key-logger.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-key-logger",
            "styleUrls": [
                "./key-logger.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./key-logger.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "numeric",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "input",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef | undefined",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'keyContainer', {static: true}"
                        }
                    ]
                },
                {
                    "name": "keys",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, OnInit, ViewChild, Input } from '@angular/core';\nimport { fromEvent, filter as filterrx, map as maprx, tap } from 'rxjs';\n\n@Component({\n  selector: 'app-key-logger',\n  templateUrl: './key-logger.component.html',\n  styleUrls: ['./key-logger.component.css'],\n})\nexport class KeyLoggerComponent implements OnInit {\n  @ViewChild('keyContainer', { static: true })\n  input: ElementRef | undefined;\n\n  @Input()\n  numeric = false;\n\n  keys = '';\n\n  ngOnInit(): void {\n    const logger$ = fromEvent<KeyboardEvent>(\n      this.input?.nativeElement,\n      'keyup'\n    );\n\n    logger$\n      .pipe(\n        maprx((evt) => evt.key.charCodeAt(0)),\n        filterrx((code) => {\n          if (this.numeric) {\n            return (code > 31 && (code < 48 || code > 57)) === false;\n          }\n          return true;\n        }),\n        tap((digit) => (this.keys += String.fromCharCode(digit)))\n      )\n      .subscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./key-logger.component.css"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex flex-col \">\n  <div>\n    <input\n      class=\"\n        max-w-xs\n        mt-1\n        px-3\n        py-2\n        bg-white\n        border\n        shadow-sm\n        border-slate-300\n        placeholder-slate-400\n        focus:outline-none\n        focus:border-sky-500\n        focus:ring-sky-500\n        block\n        w-full\n        rounded-md\n        sm:text-sm\n        focus:ring-1\n      \"\n      placeholder=\"start typing\"\n      type=\"text\"\n      #keyContainer\n    />\n  </div>\n  <div class=\"max-w-xs\">\n    <p class=\"break-words\">You pressed: {{ keys }}</p>\n  </div>\n</div>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-7126d8c2607c946741c651482413b43feb72b2d63cac9d3ac173fde206a5e635eb4cdbf7ca7ac9327c7d4d05cf7ef619144c34c11609ad677081d0ee4e855064",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PageNotFoundComponent",
            "id": "component-PageNotFoundComponent-10a0814b5dd1517de747a3e32f9bdd7fa25da188373d0106abde731de4d0baa0157c09c62f910bd4c6820588f0686a524322e1a3e37b5859d388fe7e31345dd7",
            "file": "src/app/page-not-found/page-not-found.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-page-not-found",
            "styleUrls": [
                "./page-not-found.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./page-not-found.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "goHome",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent {\n\n  constructor(private router: Router) { }\n\n  goHome() {\n    this.router.navigate(['/']);\n    }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./page-not-found.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<h3>Ooops!</h3>\n<p>The requested page was not found</p>\n<button (click)=\"goHome()\">Home</button>\n"
        },
        {
            "name": "ProductCreateComponent",
            "id": "component-ProductCreateComponent-0e15331ab60a0eee6e489bc353c70b0f86ae4982588e97d7f962d5eb58c3534c13adc18a1cfb277847dc0476a07c75951541ccb1635a3e59e4dc4c98c56f86b9",
            "file": "src/app/products/product-create/product-create.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-product-create",
            "styleUrls": [
                "./product-create.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./product-create.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "added",
                    "defaultValue": "new EventEmitter<Product>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n",
                    "description": "",
                    "jsdoctags": [
                        {
                            "pos": 687,
                            "end": 768,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 688,
                                "end": 694,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "Output"
                            },
                            "comment": "<p>() added: EventEmitter used to emit events when a new product is added</p>\n"
                        }
                    ],
                    "line": 23,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "categories",
                    "defaultValue": "['Hardware', 'Computers', 'Clothing', 'Software']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "<p>categories: An array of strings representing product categories</p>\n",
                    "line": 34,
                    "rawdescription": "\n\ncategories: An array of strings representing product categories\n"
                },
                {
                    "name": "isChecked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BooleanInput",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "productForm",
                    "defaultValue": "new FormGroup({\n    name: new FormControl<string>('', {\n      nonNullable: true,\n      validators: Validators.required,\n    }),\n    price: new FormControl<number | undefined>(undefined, {\n      nonNullable: true,\n      validators: [\n        Validators.required,\n        Validators.min(2),\n        priceRangeValidator(),\n      ],\n    }),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>productForm: FormGroup instance to manage the form controls and validation</p>\n",
                    "line": 44,
                    "rawdescription": "\n\nproductForm: FormGroup instance to manage the form controls and validation\n"
                },
                {
                    "name": "products",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "optional": false,
                    "description": "<p>products: An array of Product objects to store the products</p>\n",
                    "line": 29,
                    "rawdescription": "\n\nproducts: An array of Product objects to store the products\n"
                },
                {
                    "name": "products$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Product[]> | undefined",
                    "optional": false,
                    "description": "<p>products$: Observable used for filtering products based on the name input value</p>\n",
                    "line": 62,
                    "rawdescription": "\n\nproducts$: Observable used for filtering products based on the name input value\n"
                },
                {
                    "name": "showPriceRangeHint",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "<p>showPriceRangeHint: A boolean value to toggle the display of the price range hint</p>\n",
                    "line": 39,
                    "rawdescription": "\n\nshowPriceRangeHint: A boolean value to toggle the display of the price range hint\n"
                }
            ],
            "methodsClass": [
                {
                    "name": "createProduct",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\ncreateProduct: Method to create a new product and emit the 'added' event\n",
                    "description": "<p>createProduct: Method to create a new product and emit the &#39;added&#39; event</p>\n"
                },
                {
                    "name": "loadProducts",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nloadProducts: Method to load products using the ProductsService\n",
                    "description": "<p>loadProducts: Method to load products using the ProductsService</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nngOnInit: Angular lifecycle hook to perform initialization tasks\n",
                    "description": "<p>ngOnInit: Angular lifecycle hook to perform initialization tasks</p>\n"
                },
                {
                    "name": "setupPriceHint",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nsetupPriceHint: Method to set up the price hint based on the price input value changes\n",
                    "description": "<p>setupPriceHint: Method to set up the price hint based on the price input value changes</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "setupProductNameSuggestions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 135,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nsetupProductNameSuggestions: Method to set up product name suggestions based on the name input value changes\n",
                    "description": "<p>setupProductNameSuggestions: Method to set up product name suggestions based on the name input value changes</p>\n",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { map, Observable } from 'rxjs';\n\nimport { Product } from '../product';\nimport { ProductsService } from '../products.service';\n\nimport { priceRangeValidator } from '../price-range.directive';\nimport { BooleanInput } from '@angular/cdk/coercion';\n\n// 1. Component metadata\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.css'],\n})\n// 2. Imports\nexport class ProductCreateComponent implements OnInit {\n  // 4. Input and Output properties\n  /**\n   * @Output() added: EventEmitter used to emit events when a new product is added\n   */\n  @Output() added = new EventEmitter<Product>();\n\n  // 5. Public properties\n  /**\n   * products: An array of Product objects to store the products\n   */\n  products: Product[] = [];\n\n  /**\n   * categories: An array of strings representing product categories\n   */\n  categories = ['Hardware', 'Computers', 'Clothing', 'Software'];\n\n  /**\n   * showPriceRangeHint: A boolean value to toggle the display of the price range hint\n   */\n  showPriceRangeHint: boolean = false;\n\n  /**\n   * productForm: FormGroup instance to manage the form controls and validation\n   */\n  productForm = new FormGroup({\n    name: new FormControl<string>('', {\n      nonNullable: true,\n      validators: Validators.required,\n    }),\n    price: new FormControl<number | undefined>(undefined, {\n      nonNullable: true,\n      validators: [\n        Validators.required,\n        Validators.min(2),\n        priceRangeValidator(),\n      ],\n    }),\n  });\n\n  /**\n   * products$: Observable used for filtering products based on the name input value\n   */\n  products$: Observable<Product[]> | undefined;\n\n  isChecked: BooleanInput;\n\n  // 7. Getters and Setters\n  /**\n   * name: Getter to access the 'name' FormControl from the productForm\n   */\n  get name() {\n    return this.productForm.controls.name;\n  }\n\n  /**\n   * price: Getter to access the 'price' FormControl from the productForm\n   */\n  get price() {\n    return this.productForm.controls.price;\n  }\n\n  // 8. Constructor\n  /**\n   * @param productsService: The ProductsService instance to interact with product data\n   */\n  constructor(private productsService: ProductsService) {}\n\n  // 9. Angular lifecycle hooks\n  /**\n   * ngOnInit: Angular lifecycle hook to perform initialization tasks\n   */\n  ngOnInit(): void {\n    this.setupPriceHint();\n    this.loadProducts();\n    this.setupProductNameSuggestions();\n  }\n\n  // 10. Public methods\n  /**\n   * createProduct: Method to create a new product and emit the 'added' event\n   */\n  createProduct(): void {\n    console.log(`this price: ${this.price.value}`);\n    this.productsService\n      .addProduct(this.name.value, this.price.value)\n      .subscribe((product) => {\n        this.added.emit(product);\n        this.productForm.reset();\n      });\n  }\n\n  // 11. Private methods\n  /**\n   * setupPriceHint: Method to set up the price hint based on the price input value changes\n   */\n  private setupPriceHint(): void {\n    this.price.valueChanges.subscribe((price) => {\n      if (price) {\n        this.showPriceRangeHint = price > 1 && price < 10000;\n      }\n    });\n  }\n\n  /**\n   * loadProducts: Method to load products using the ProductsService\n   */\n  private loadProducts(): void {\n    this.productsService.getProducts().subscribe((products) => {\n      this.products = products;\n    });\n  }\n\n  /**\n   * setupProductNameSuggestions: Method to set up product name suggestions based on the name input value changes\n   */\n  private setupProductNameSuggestions(): void {\n    this.products$ = this.name.valueChanges.pipe(\n      map((name) =>\n        this.products.filter((product) => product.name.startsWith(name))\n      )\n    );\n  }\n\n  // 12. Utility methods (none in this case)\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./product-create.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productsService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 79,
                "rawdescription": "\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 2230,
                            "end": 2245,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "productsService"
                        },
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2224,
                            "end": 2229,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>: The ProductsService instance to interact with product data</p>\n"
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "name": {
                    "name": "name",
                    "getSignature": {
                        "name": "name",
                        "type": "",
                        "returnType": "",
                        "line": 70,
                        "rawdescription": "\n\nname: Getter to access the 'name' FormControl from the productForm\n",
                        "description": "<p>name: Getter to access the &#39;name&#39; FormControl from the productForm</p>\n"
                    }
                },
                "price": {
                    "name": "price",
                    "getSignature": {
                        "name": "price",
                        "type": "",
                        "returnType": "",
                        "line": 77,
                        "rawdescription": "\n\nprice: Getter to access the 'price' FormControl from the productForm\n",
                        "description": "<p>price: Getter to access the &#39;price&#39; FormControl from the productForm</p>\n"
                    }
                }
            },
            "templateData": "<div class=\"grid grid-cols-2 gap-2 p-2\">\n  <form [formGroup]=\"productForm\" (ngSubmit)=\"createProduct()\">\n    <div>\n      <mat-form-field>\n        <mat-autocomplete #productsAuto=\"matAutocomplete\">\n          <mat-option\n            *ngFor=\"let product of products$ | async\"\n            [value]=\"product.name\"\n          >\n            {{ product.name }}\n          </mat-option>\n        </mat-autocomplete>\n        <input\n          formControlName=\"name\"\n          placeholder=\"Name\"\n          [matAutocomplete]=\"productsAuto\"\n          required\n          matInput\n        />\n        <mat-error>The name is not valid</mat-error>\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field>\n        <input formControlName=\"price\" placeholder=\"Price\" required matInput />\n        <mat-error>The price is required</mat-error>\n        <mat-hint> Price should be between 1 and 10000 </mat-hint>\n      </mat-form-field>\n    </div>\n    <div>\n      <mat-form-field>\n        <mat-label>Categories</mat-label>\n        <mat-select multiple>\n          <mat-option *ngFor=\"let category of categories\" [value]=\"category\">\n            {{ category }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <mat-checkbox color=\"primary\" [checked]=\"isChecked\">Check me</mat-checkbox>\n    <div>\n      <div>\n        <button\n          mat-raised-button\n          color=\"primary\"\n          type=\"submit\"\n          [disabled]=\"!productForm.valid\"\n        >\n          Create\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n"
        },
        {
            "name": "ProductDetailComponent",
            "id": "component-ProductDetailComponent-bbd711897548668a3261a376734048ea3f02ca55b9aaad3c6a32cc381bc38a6d481a65e21ebb694aad7d6ed0d0782ae539478d0eccc26f4bd923d6a27985af22",
            "file": "src/app/products/product-detail/product-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-product-detail",
            "styleUrls": [
                "./product-detail.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./product-detail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "-1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "Product | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "bought",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "authService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthService",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "cartService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CartService",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | undefined",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "product$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Product> | undefined",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "productService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProductsService",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActivatedRoute",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "buy",
                    "args": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdds a product to the cart and emits a \"bought\" event with the product name.\n",
                    "description": "<p>Adds a product to the cart and emits a &quot;bought&quot; event with the product name.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1609,
                                "end": 1616,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "product"
                            },
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1603,
                                "end": 1608,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The product to be bought.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "changePrice",
                    "args": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "price",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChanges the price of a product and displays an alert with the updated price.\n",
                    "description": "<p>Changes the price of a product and displays an alert with the updated price.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1936,
                                "end": 1943,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "product"
                            },
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1930,
                                "end": 1935,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The product whose price will be changed.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 1999,
                                "end": 2004,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "price"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1993,
                                "end": 1998,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The new price for the product.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "loadProduct",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLoads a product from the ActivatedRoute paramMap.\n",
                    "description": "<p>Loads a product from the ActivatedRoute paramMap.</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "loadProductFromData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLoads a product from the ActivatedRoute data.\n",
                    "description": "<p>Loads a product from the ActivatedRoute data.</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  OnChanges,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Product } from '../product';\n\nimport { Observable, of, switchMap } from 'rxjs';\n\nimport { CartService } from '../../cart/cart.service';\nimport { ProductsService } from '../products.service';\nimport { AuthService } from '../../auth/auth.service';\n\n@Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.css'],\n})\nexport class ProductDetailComponent implements OnInit, OnChanges {\n  // 4. Input and Output properties\n  @Input() product: Product | undefined;\n  @Input() id = -1;\n  @Output() bought = new EventEmitter();\n\n  // 5. Public properties\n  price: number | undefined;\n  product$: Observable<Product> | undefined;\n  authService: AuthService;\n\n  // 6. Private properties\n  private productService: ProductsService;\n  private route: ActivatedRoute;\n  private cartService: CartService;\n\n  // 8. Constructor\n  constructor(\n    authService: AuthService,\n    productService: ProductsService,\n    route: ActivatedRoute,\n    cartService: CartService\n  ) {\n    this.authService = authService;\n    this.productService = productService;\n    this.route = route;\n    this.cartService = cartService;\n  }\n\n  // 9. Angular lifecycle hooks\n  ngOnChanges(): void {\n    this.loadProduct();\n  }\n\n  ngOnInit(): void {\n    this.loadProductFromData();\n  }\n\n  // 10. Public methods\n  /**\n   * Adds a product to the cart and emits a \"bought\" event with the product name.\n   * @param product - The product to be bought.\n   */\n  buy(product: Product) {\n    this.cartService.addProduct(product);\n\n    this.productService.getProduct(product.id).subscribe(() => {\n      this.bought.emit(product.name);\n    });\n  }\n\n  /**\n   * Changes the price of a product and displays an alert with the updated price.\n   * @param product - The product whose price will be changed.\n   * @param price - The new price for the product.\n   */\n  changePrice(product: Product, price: number) {\n    this.productService.updateProduct(product.id, price).subscribe(() => {\n      alert(`The price of ${product.name} was changed!`);\n    });\n  }\n\n  // 11. Private methods\n  /**\n   * Loads a product from the ActivatedRoute paramMap.\n   */\n  private loadProduct(): void {\n    this.product$ = this.route.paramMap.pipe(\n      switchMap((params) => {\n        return this.productService.getProduct(Number(params.get('id')));\n      })\n    );\n  }\n\n  /**\n   * Loads a product from the ActivatedRoute data.\n   */\n  private loadProductFromData(): void {\n    this.product$ = this.route.data.pipe(\n      switchMap((data) => of(data['product']))\n    );\n  }\n\n  // 7. Getters and Setters\n  /**\n   * Returns the name of the current product, or a fallback string if no product is selected.\n   */\n  get productName(): string {\n    if (this.product) {\n      return this.product.name;\n    }\n    return 'No Product selected';\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "input {\n  margin-left: 5px;\n  }\n",
                    "styleUrl": "./product-detail.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 38,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "accessors": {
                "productName": {
                    "name": "productName",
                    "getSignature": {
                        "name": "productName",
                        "type": "string",
                        "returnType": "string",
                        "line": 111,
                        "rawdescription": "\n\nReturns the name of the current product, or a fallback string if no product is selected.\n",
                        "description": "<p>Returns the name of the current product, or a fallback string if no product is selected.</p>\n"
                    }
                }
            },
            "templateData": "<div id=\"ex-product-product-detail\" *ngIf=\"product$ | async as product\">\n  <h2 class=\"h2\">Product Details</h2>\n  <div>\n    <p>{{ product.name }}</p>\n    <p>{{ product.price | currency : \"EUR\" }}</p>\n  </div>\n  <div>\n    <form (ngSubmit)=\"changePrice(product, price!)\" class=\"inline\">\n      <input placeholder=\"New price\" name=\"price\" [(ngModel)]=\"price\" />\n      <button type=\"submit\">Change</button>\n    </form>\n    <button\n      *ngIf=\"authService.isLoggedIn\"\n      (click)=\"buy(product)\"\n      class=\"border-2 bg-gray-400 bg-clip-padding px-2 py-1\"\n    >\n      Buy Now\n    </button>\n  </div>\n</div>\n"
        },
        {
            "name": "ProductListComponent",
            "id": "component-ProductListComponent-18a23fb3b8b67a0c624d85b02a8e364055f71057bcf1deafaa309127f0b081502084f512ced148a54ca861d1dbcc60c01393ce41ee5f130bf27e0d2309677399",
            "file": "src/app/products/product-list/product-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "ProductsService"
                }
            ],
            "selector": "app-product-list",
            "styleUrls": [
                "./product-list.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./product-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columnNames",
                    "defaultValue": "['name', 'price']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTableDataSource<Product>",
                    "optional": false,
                    "description": "<p>MatTableDataSource to hold and manage the list of products for the Angular Material Table.</p>\n",
                    "line": 41,
                    "rawdescription": "\n\nMatTableDataSource to hold and manage the list of products for the Angular Material Table.\n"
                },
                {
                    "name": "products$",
                    "defaultValue": "new BehaviorSubject<Product[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<Product[]>",
                    "optional": false,
                    "description": "<p>A BehaviorSubject to hold the list of products.</p>\n",
                    "line": 31,
                    "rawdescription": "\n\nA BehaviorSubject to hold the list of products.\n"
                },
                {
                    "name": "selectedProduct",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product | undefined",
                    "optional": false,
                    "description": "<p>The currently selected product.</p>\n",
                    "line": 36,
                    "rawdescription": "\n\nThe currently selected product.\n"
                },
                {
                    "name": "sort",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort | null",
                    "optional": false,
                    "description": "<p>ViewChild to access the MatSort directive to apply sorting to the MatTableDataSource.</p>\n",
                    "line": 26,
                    "rawdescription": "\n\nViewChild to access the MatSort directive to apply sorting to the MatTableDataSource.\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getProducts",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRetrieves the list of products from the productService and updates the products BehaviorSubject.\n",
                    "description": "<p>Retrieves the list of products from the productService and updates the products BehaviorSubject.</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nngOnInit lifecycle hook to retrieve the list of products on initialization.\n",
                    "description": "<p>ngOnInit lifecycle hook to retrieve the list of products on initialization.</p>\n"
                },
                {
                    "name": "onAdd",
                    "args": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdds a new product to the products BehaviorSubject.\n\n",
                    "description": "<p>Adds a new product to the products BehaviorSubject.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1888,
                                "end": 1895,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "product"
                            },
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1882,
                                "end": 1887,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>The product to be added to the list.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onBuy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDisplays an alert to the user that a product has been bought.\n",
                    "description": "<p>Displays an alert to the user that a product has been bought.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Product } from '../product';\nimport { ProductsService } from '../products.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\n\n// 1. Component metadata\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css'],\n  providers: [ProductsService],\n})\n// 2. Imports\nexport class ProductListComponent implements OnInit {\n  // 3. Class declaration (already done)\n\n  // 4. Input and Output properties (none in this case)\n\n  // 5. Public properties\n  /**\n   * ViewChild to access the MatSort directive to apply sorting to the MatTableDataSource.\n   */\n  @ViewChild(MatSort) sort: MatSort | null = null;\n\n  /**\n   * A BehaviorSubject to hold the list of products.\n   */\n  products$: BehaviorSubject<Product[]> = new BehaviorSubject<Product[]>([]);\n\n  /**\n   * The currently selected product.\n   */\n  selectedProduct: Product | undefined;\n\n  /**\n   * MatTableDataSource to hold and manage the list of products for the Angular Material Table.\n   */\n  dataSource!: MatTableDataSource<Product>;\n  columnNames = ['name', 'price'];\n\n  // 6. Private properties (none in this case)\n\n  // 7. Getters and Setters (none in this case)\n\n  // 8. Constructor\n  /**\n   * Constructor to inject the ProductsService dependency.\n   *\n   * @param productService The service responsible for managing product data.\n   */\n  constructor(private productService: ProductsService) {}\n\n  // 9. Angular lifecycle hooks\n  /**\n   * ngOnInit lifecycle hook to retrieve the list of products on initialization.\n   */\n  ngOnInit(): void {\n    this.getProducts();\n  }\n\n  // 10. Public methods\n  /**\n   * Adds a new product to the products BehaviorSubject.\n   *\n   * @param product The product to be added to the list.\n   */\n  onAdd(product: Product): void {\n    const currentProducts = this.products$.getValue();\n    this.products$.next([...currentProducts, product]);\n  }\n\n  /**\n   * Displays an alert to the user that a product has been bought.\n   */\n  onBuy(): void {\n    window.alert(`You just bought ${this.selectedProduct?.name}!`);\n  }\n\n  // 11. Private methods\n  /**\n   * Retrieves the list of products from the productService and updates the products BehaviorSubject.\n   */\n  private getProducts(): void {\n    this.productService.getProducts().subscribe((products) => {\n      this.products$.next(products);\n    });\n  }\n\n  // 12. Utility methods (none in this case)\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./product-list.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Constructor to inject the ProductsService dependency.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 42,
                "rawdescription": "\n\nConstructor to inject the ProductsService dependency.\n\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 1478,
                            "end": 1492,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "productService"
                        },
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 1472,
                            "end": 1477,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>The service responsible for managing product data.</p>\n"
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-product-create (added)=\"onAdd($event)\"></app-product-create>\n\n<app-product-table [products$]=\"products$\" [sort_active]=\"true\" [paginator_active]=\"true\"></app-product-table>\n\n\n  <div\n    class=\"mx-auto space-y-6 border-2 bg-gray-400 px-2 py-1\"\n    id=\"ex-product-product-detail\"\n  >\n    <router-outlet></router-outlet>\n  </div>\n\n  <ng-template #noProduct>\n    <div\n      class=\"mx-auto border-2 bg-gray-400 px-2 py-1\"\n      id=\"ex-product-product-detail-no-product\"\n    >\n      <p>No Product selected!</p>\n    </div>\n  </ng-template>\n\n"
        },
        {
            "name": "ProductListItemComponent",
            "id": "component-ProductListItemComponent-8bc48745df5d909dd5d4f0151c6d0f26e3859b9de5b2b734a92f6916db99dd56eb44958bb9193f994dc39b5112bb7ff70c2fb2a9456e172fb6bbdbfa2a3cc3a2",
            "file": "src/app/products/product-list-item/product-list-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-product-list-item",
            "styleUrls": [
                "./product-list-item.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./product-list-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "product$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Observable<Product> | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { Product } from '../product';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-product-list-item',\n  templateUrl: './product-list-item.component.html',\n  styleUrls: ['./product-list-item.component.css'],\n})\nexport class ProductListItemComponent {\n  @Input() product$: Observable<Product> | undefined;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./product-list-item.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<li *ngIf=\"product$ | async as product\" class=\"hover:bg-yellow-200\">\n  <a [routerLink]=\"['/products', product.id]\">{{ product.name }}</a>\n</li>\n"
        },
        {
            "name": "ProductsComponent",
            "id": "component-ProductsComponent-55d5ef0d1127cfd0539d79b6e6dd401d01db73ad5285ac968e7fd474d3ebcfacb82d8b28164c2435900ddfbd6a7d89adfcbde6d5a1154463ab570cbdf42f8a70",
            "file": "src/app/products/products/products.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-products",
            "styleUrls": [
                "./products.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./products.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./products.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<app-product-create></app-product-create>\n\n\n<app-product-list></app-product-list>\n"
        },
        {
            "name": "ProductTableComponent",
            "id": "component-ProductTableComponent-cc6e3ea9bb7b44e62802a753a1401c256a97bf4c08f440a4b6ce93cde29dc86371e58b1ed6296a92bd343514a1d829fdc384897b0568041133ec1fd3827c0fc7",
            "file": "src/app/products/product-table/product-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-product-table",
            "styleUrls": [
                "./product-table.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./product-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "paginator_active",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "products$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "Observable<Product[]>",
                    "decorators": []
                },
                {
                    "name": "sort_active",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_products$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Product[]>",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "columnNames",
                    "defaultValue": "['name', 'price', 'actions']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dataSource",
                    "defaultValue": "new MatTableDataSource<Product>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "paginator",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator | null",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ]
                },
                {
                    "name": "sort",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort | null",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  AfterViewInit,\n  ViewChild,\n  OnInit,\n} from '@angular/core';\nimport { Product } from '../product';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { Observable } from 'rxjs';\nimport { MatPaginator } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-product-table',\n  templateUrl: './product-table.component.html',\n  styleUrls: ['./product-table.component.css'],\n})\nexport class ProductTableComponent implements OnInit {\n  @Input()\n  set products$(products$: Observable<Product[]>) {\n    this._products$ = products$;\n    this._products$.subscribe((products) => {\n      this.dataSource.data = products;\n      if (this.paginator_active) {\n        this.dataSource.paginator = this.paginator;\n      }\n      if (this.sort_active) {\n        this.dataSource.sort = this.sort;\n      }\n    });\n  }\n\n  @Input() sort_active = false;\n  @Input() paginator_active = false;\n\n  @ViewChild(MatSort) sort: MatSort | null = null;\n  @ViewChild(MatPaginator) paginator: MatPaginator | null = null;\n  public dataSource = new MatTableDataSource<Product>();\n  public columnNames = ['name', 'price', 'actions'];\n\n  private _products$!: Observable<Product[]>;\n\n  get products$(): Observable<Product[]> {\n    return this._products$;\n  }\n\n  ngOnInit(): void {\n    // Set the dataSource sort to the ViewChild MatSort\n    if (this.paginator_active) {\n      this.dataSource.paginator = this.paginator;\n    }\n    else {\n      this.dataSource.paginator = null;\n    }\n    if (this.sort_active) {\n      this.dataSource.sort = this.sort;\n    }\n    else {\n      this.dataSource.sort = null\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./product-table.component.css"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "products$": {
                    "name": "products$",
                    "setSignature": {
                        "name": "products$",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "products$",
                                "type": "Observable<Product[]>",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 21,
                        "jsdoctags": [
                            {
                                "name": "products$",
                                "type": "Observable<Product[]>",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "products$",
                        "type": "",
                        "returnType": "Observable<Product[]>",
                        "line": 44
                    }
                }
            },
            "templateData": "<table mat-table [dataSource]=\"dataSource\" matSort matSortDisableClear>\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n    <td mat-cell *matCellDef=\"let product\">\n      <a [routerLink]=\"['/products', product.id]\">{{ product.name }}</a>\n    </td>\n  </ng-container>\n  <ng-container matColumnDef=\"price\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Price</th>\n    <td mat-cell *matCellDef=\"let product\">{{ product.price | currency }}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"actions\">\n    <th mat-header-cell *matHeaderCellDef>Actions</th>\n    <td mat-cell *matCellDef=\"let product\">\n      <!-- Add action buttons here, e.g. Buy button -->\n    </td>\n  </ng-container>\n  <tr mat-header-row *matHeaderRowDef=\"columnNames\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: columnNames\"></tr>\n</table>\n<ng-container *ngIf=\"paginator_active\">\n  <mat-paginator [pageSize]=\"5\" [pageSizeOptions]=\"[5, 10, 15]\"></mat-paginator>\n</ng-container>\n"
        },
        {
            "name": "ProductViewComponent",
            "id": "component-ProductViewComponent-976ac84550596f32caa5783a26284d0f28f1f23438002128737b62cbcb7d2db492c449181760fa08855017a47ae29c31148ac2c1bd21b505b828d1ba1e851ac1",
            "file": "src/app/products/product-view/product-view.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "ProductViewService"
                }
            ],
            "selector": "app-product-view",
            "styleUrls": [
                "./product-view.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./product-view.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "-1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "price",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "productSub",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getProduct",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nServices",
                    "description": "<p>Services</p>\n",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nComponent Lifecycle",
                    "description": "<p>Component Lifecycle</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { ProductViewService } from './product-view.service';\nimport { Subject, takeUntil } from 'rxjs';\n\n@Component({\n  selector: 'app-product-view',\n  templateUrl: './product-view.component.html',\n  styleUrls: ['./product-view.component.css'],\n  providers: [ProductViewService],\n})\nexport class ProductViewComponent implements OnInit, OnDestroy {\n  @Input()\n  id = -1;\n\n  name: string = '';\n  price: number = 0;\n\n  private productSub = new Subject<void>();\n\n  constructor(private productviewService: ProductViewService) {}\n\n  /** Services */\n  private getProduct() {\n    this.productviewService\n      .getProduct(this.id)\n      .pipe(takeUntil(this.productSub))\n      .subscribe((product) => {\n        if (product) {\n          this.name = product.name;\n          this.price = product.price;\n        }\n      });\n  }\n\n  /** Component Lifecycle */\n  ngOnInit(): void {\n    this.getProduct();\n  }\n\n  ngOnDestroy(): void {\n    this.productSub.next();\n    this.productSub.complete();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./product-view.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productviewService",
                        "type": "ProductViewService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "productviewService",
                        "type": "ProductViewService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "{{name}} | {{ price }}\n"
        }
    ],
    "modules": [
        {
            "name": "AboutModule",
            "id": "module-AboutModule-e67b0aaab38f37d737fc5e153084843cef4b0ee28d96b8519df4b3ab9797200783537286eab40951255ffd8227244c82433c45b02f6c40df448cced946ba83a5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/about/about.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AboutRoutingModule } from './about-routing.module';\n\n@NgModule({\n  imports: [CommonModule, AboutRoutingModule],\n})\n\nexport class AboutModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AboutRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AboutRoutingModule",
            "id": "module-AboutRoutingModule-1e0335bebf4d278a09a64b8f101f8cb7b331079f6498b0a5fb8a041e1ca884188648cd61d4c475f4fee1dc381b5ff6dbd0570501c63d3dbca088cbb36702713b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/about/about-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AboutInfoComponent } from './about-info/about-info.component';\n\nconst routes: Routes = [{ path: '', component: AboutInfoComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AboutRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-6b1d03fecd9f25da84d940f41217b46bd0be88830702ee53af8fac4a745e9c7a8b4ea40de8ce62a4c7f828d6f61c33aefd38a3fb4843c5bbf7bf258179afc441",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthModule } from './auth/auth.module';\nimport { ProductsModule } from './products/products.module';\n\nimport { AppComponent } from './app.component';\nimport { ComponentComponent } from './Components/component/component.component';\nimport { KeyLoggerComponent } from './key-logger/key-logger.component';\n\nimport { CopyrightDirective } from './copyright.directive';\nimport { NumericDirective } from './numeric.directive';\n\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { AppRoutingModule } from './app-routing.module';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { CartComponent } from './cart/cart.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CartComponent,\n    ComponentComponent,\n    CopyrightDirective,\n    NumericDirective,\n    KeyLoggerComponent,\n    PageNotFoundComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AuthModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ProductsModule,\n    AppRoutingModule,\n    CommonModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AuthInterceptor"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "CartComponent"
                        },
                        {
                            "name": "ComponentComponent"
                        },
                        {
                            "name": "CopyrightDirective"
                        },
                        {
                            "name": "KeyLoggerComponent"
                        },
                        {
                            "name": "NumericDirective"
                        },
                        {
                            "name": "PageNotFoundComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "AuthModule"
                        },
                        {
                            "name": "ProductsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-620a2575223d702d1dcf260daba3f70de56a7ed65998b9ff22404f8bcd358b31e492b8e02d1bdb1631b25b906511e588037a07720bfd677c0c96dae1d591b253",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CartComponent } from './cart/cart.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\nimport { authGuard } from './auth/auth.guard';\nimport { checkoutGuard } from './checkout.guard';\n\nconst routes: Routes = [\n  { path: 'cart', component: CartComponent, canActivate: [authGuard], canDeactivate: [checkoutGuard]},\n  { path: 'about', loadComponent: () => \"import('./about/about-info/about-info.component').then(m => m.AboutInfoComponent)\", canLoad: [authGuard] },\n  { path: '**', component: PageNotFoundComponent }\n  ];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthModule",
            "id": "module-AuthModule-0e80eac8c88fe615f328d9652cf7531b10e3fec84109fe69cc653fb8f63c6381a1fa83cf8a67d95cdcaac668d9cce4b0266075c5c082722bd524ac91baeb5260",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/auth/auth.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthComponent } from './auth/auth.component';\nimport { MatButtonModule } from '@angular/material/button';\n\n\n\n@NgModule({\n  declarations: [\n    AuthComponent\n  ],\n  imports: [\n    CommonModule,\n    MatButtonModule\n  ],\n  exports: [\n    AuthComponent\n  ]\n})\nexport class AuthModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AuthComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AuthComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OrdersModule",
            "id": "module-OrdersModule-5d82a1e2c09a7a5e15fb7d594e369fa71aac145a23d169dd35359071577f245114335e599cdbb65e91fc13bc73dcbaf90ef09d54a61697a779ddfafe5f388b81",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/orders/orders.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductsModule } from '../products/products.module';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    ProductsModule,\n  ]\n})\nexport class OrdersModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ProductsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductsModule",
            "id": "module-ProductsModule-5923ff40944e040fae0b685f2a0ea2f5c982c018fbb084951a265b9330a4a8fd94df3bd198cb2fd43ce6ee45872613956c5febb5a648ab918a698a5f9fe2397e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/products/products.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ProductsRoutingModule } from './products-routing.module';\n\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\nimport { ProductsComponent } from './products/products.component';\nimport { ProductCreateComponent } from './product-create/product-create.component';\nimport { ProductViewComponent } from './product-view/product-view.component';\n\nimport { SortPipe } from '../sort.pipe';\n\nimport { ProductHostDirective } from './product-host.directive';\nimport { PermissionDirective } from '../permission.directive';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTableModule } from '@angular/material/table'\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator'\nimport { ProductTableComponent } from './product-table/product-table.component';\nimport { ProductListItemComponent } from './product-list-item/product-list-item.component'\n\n@NgModule({\n  declarations: [\n    ProductListComponent,\n    ProductDetailComponent,\n    SortPipe,\n    ProductHostDirective,\n    ProductViewComponent,\n    ProductCreateComponent,\n    ProductsComponent,\n    ProductTableComponent,\n    ProductListItemComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PermissionDirective,\n    ProductsRoutingModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n  ],\n  exports: [ProductListComponent, ProductDetailComponent],\n})\nexport class ProductsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProductCreateComponent"
                        },
                        {
                            "name": "ProductDetailComponent"
                        },
                        {
                            "name": "ProductHostDirective"
                        },
                        {
                            "name": "ProductListComponent"
                        },
                        {
                            "name": "ProductListItemComponent"
                        },
                        {
                            "name": "ProductTableComponent"
                        },
                        {
                            "name": "ProductViewComponent"
                        },
                        {
                            "name": "ProductsComponent"
                        },
                        {
                            "name": "SortPipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "PermissionDirective"
                        },
                        {
                            "name": "ProductsRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ProductDetailComponent"
                        },
                        {
                            "name": "ProductListComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductsRoutingModule",
            "id": "module-ProductsRoutingModule-bcc8747a8cedc3aa7fe5c3773b9c55197d33b69fbbfe81616fb5fe6c39a21d9757ad76a3e77979f6d9d6b37028569c11e5a1310770861b9fce675733909bc54b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/products/products-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProductsService } from './products.service';\n\nimport { productDetailResolverFactory } from './product-detail.resolver';\n\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\n\nconst routes: Routes = [\n  {\n    path: 'products',\n    component: ProductListComponent,\n    children: [{\n      path: ':id',\n      component: ProductDetailComponent,\n      resolve: {\n        product: 'productDetailResolver',\n      },\n    }],\n  },\n  { path: '', redirectTo: '/products', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [\n    {\n      provide: 'productDetailResolver',\n      useFactory: productDetailResolverFactory,\n      deps: [ProductsService],\n    },\n  ],\n})\nexport class ProductsRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "APP_CONFIG",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<AppConfig>('app.config')"
            },
            {
                "name": "appSettings",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AppConfig",
                "defaultValue": "{\n  title: 'My application',\n  version: 1.0,\n}"
            },
            {
                "name": "authGuard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/auth.guard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CanActivateFn | CanLoadFn",
                "defaultValue": "() => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  if (authService.isLoggedIn) {\n    return true;\n  }\n  return router.parseUrl('/');\n}"
            },
            {
                "name": "checkoutGuard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/checkout.guard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CanDeactivateFn<CartComponent>",
                "defaultValue": "() => {\n  const confirmation = confirm(\n    'You have pending items in your cart. Do you want to continue?'\n  );\n  return confirmation;\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/products/product-table/product-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Object.assign(Template.bind({}), {\n  args: {\n    products$: of(sampleProducts)\n  },\n})"
            },
            {
                "name": "DoInit",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/products/product-table/product-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DoSomething",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/products/product-table/product-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Object.assign(Template.bind({}), {\n  args: {\n    products$: of(sampleProducts),\n    columnNames: \"['name', 'priced', 'noaction']\"\n  },\n})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "sampleProducts",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/products/product-table/product-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  { id: 1, name: 'Product 1', price: 10 },\n  { id: 2, name: 'Product 2', price: 20 },\n  { id: 3, name: 'Product 3', price: 30 },\n  { id: 4, name: 'Product 4', price: 40 },\n  { id: 5, name: 'Product 5', price: 50 },\n  { id: 6, name: 'Product 6', price: 60 },\n]"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/products/product-table/product-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<any>",
                "defaultValue": "(args: any) => ({\n  component: ProductTableComponent,\n  props: {\n    ...args\n  },\n  componentCreated: (component: ProductTableComponent) => {\n    component.ngOnInit();\n  },\n})"
            }
        ],
        "functions": [
            {
                "name": "priceRangeValidator",
                "file": "src/app/products/price-range.directive.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "ValidatorFn"
            },
            {
                "name": "productDetailResolverFactory",
                "file": "src/app/products/product-detail.resolver.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ResolveFn<Product>",
                "jsdoctags": [
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "APP_CONFIG",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<AppConfig>('app.config')"
                },
                {
                    "name": "appSettings",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppConfig",
                    "defaultValue": "{\n  title: 'My application',\n  version: 1.0,\n}"
                }
            ],
            "src/app/auth/auth.guard.ts": [
                {
                    "name": "authGuard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/auth.guard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CanActivateFn | CanLoadFn",
                    "defaultValue": "() => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  if (authService.isLoggedIn) {\n    return true;\n  }\n  return router.parseUrl('/');\n}"
                }
            ],
            "src/app/checkout.guard.ts": [
                {
                    "name": "checkoutGuard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/checkout.guard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CanDeactivateFn<CartComponent>",
                    "defaultValue": "() => {\n  const confirmation = confirm(\n    'You have pending items in your cart. Do you want to continue?'\n  );\n  return confirmation;\n}"
                }
            ],
            "src/app/products/product-table/product-table.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/products/product-table/product-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Object.assign(Template.bind({}), {\n  args: {\n    products$: of(sampleProducts)\n  },\n})"
                },
                {
                    "name": "DoInit",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/products/product-table/product-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DoSomething",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/products/product-table/product-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Object.assign(Template.bind({}), {\n  args: {\n    products$: of(sampleProducts),\n    columnNames: \"['name', 'priced', 'noaction']\"\n  },\n})"
                },
                {
                    "name": "sampleProducts",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/products/product-table/product-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  { id: 1, name: 'Product 1', price: 10 },\n  { id: 2, name: 'Product 2', price: 20 },\n  { id: 3, name: 'Product 3', price: 30 },\n  { id: 4, name: 'Product 4', price: 40 },\n  { id: 5, name: 'Product 5', price: 50 },\n  { id: 6, name: 'Product 6', price: 60 },\n]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/products/product-table/product-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<any>",
                    "defaultValue": "(args: any) => ({\n  component: ProductTableComponent,\n  props: {\n    ...args\n  },\n  componentCreated: (component: ProductTableComponent) => {\n    component.ngOnInit();\n  },\n})"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/products/price-range.directive.ts": [
                {
                    "name": "priceRangeValidator",
                    "file": "src/app/products/price-range.directive.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "ValidatorFn"
                }
            ],
            "src/app/products/product-detail.resolver.ts": [
                {
                    "name": "productDetailResolverFactory",
                    "file": "src/app/products/product-detail.resolver.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "productService",
                            "type": "ProductsService",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ResolveFn<Product>",
                    "jsdoctags": [
                        {
                            "name": "productService",
                            "type": "ProductsService",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 5,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/Components/component/component.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ComponentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/about/about-info/about-info.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AboutInfoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppConfig",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "APP_CONFIG",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appSettings",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authGuard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.interceptor.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "AuthInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 33,
                "coverageCount": "2/6",
                "status": "medium"
            },
            {
                "filePath": "src/app/auth/auth/auth.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/cart/cart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/cart/cart.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CartService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/checkout.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "checkoutGuard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/copyright.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "CopyrightDirective",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/key-logger/key-logger.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "KeyLoggerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/numeric.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "NumericDirective",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/page-not-found/page-not-found.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageNotFoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/permission.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "PermissionDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/products/price-range.directive.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "priceRangeValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/products/product-create/product-create.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductCreateComponent",
                "coveragePercent": 71,
                "coverageCount": "10/14",
                "status": "good"
            },
            {
                "filePath": "src/app/products/product-detail.resolver.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "productDetailResolverFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/products/product-detail/product-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductDetailComponent",
                "coveragePercent": 23,
                "coverageCount": "4/17",
                "status": "low"
            },
            {
                "filePath": "src/app/products/product-host.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ProductHostDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/products/product-list-item/product-list-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductListItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/products/product-list/product-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductListComponent",
                "coveragePercent": 81,
                "coverageCount": "9/11",
                "status": "very-good"
            },
            {
                "filePath": "src/app/products/product-table/product-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/products/product-table/product-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/products/product-table/product-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DoInit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/products/product-table/product-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DoSomething",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/products/product-table/product-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sampleProducts",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/products/product-table/product-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/products/product-view/product-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductViewComponent",
                "coveragePercent": 22,
                "coverageCount": "2/9",
                "status": "low"
            },
            {
                "filePath": "src/app/products/product-view/product-view.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProductViewService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/products/product.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Product",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/products/products.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProductsService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/products/products.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProductDTO",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/products/products/products.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sort.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "SortPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            }
        ]
    }
}